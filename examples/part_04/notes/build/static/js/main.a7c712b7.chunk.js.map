{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","basUrl","axios","get","then","response","data","newNote","post","id","put","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","updatedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0LAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBACA,iBAEJ,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QADR,IACiB,wBAAQC,QAASL,EAAjB,SAAoCC,QCC1CK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KAG3B,qBAAKJ,UAAU,QAAf,SAAwBI,KCWbC,EAfA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,wG,gBCVAC,EAAS,aAiBA,EAfA,kBACbC,IACGC,IAAIF,GACJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAYhB,EAVA,SAAAC,GAAO,OACpBL,IACGM,KAAKP,EAAQM,GACbH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAOhB,EALA,SAACG,EAAIF,GAAL,OACbL,IACGQ,IADH,UACUT,EADV,YACoBQ,GAAMF,GACvBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCyEhBK,EApFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETL,EAFS,KAEAQ,EAFA,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,OAIwBL,mBAAS,MAJjC,mBAITM,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGjB,MAAK,SAAAkB,GAAY,OAAIR,EAASQ,QAChC,IAEH,IAoCMC,EAAcP,EAChBH,EACAA,EAAMW,QAAO,SAAArC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCAEA,cAAC,EAAD,CAAcK,QAASuB,IAEvB,8BACE,yBAAQzB,QAAS,kBAAMwB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAIlC,6BACGO,EAAYE,KAAI,SAAAtC,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBArCD,SAACqB,GAC1B,IAAMtB,EAAO0B,EAAMa,MAAK,SAAAvC,GAAI,OAAIA,EAAKsB,KAAOA,KACtCkB,EAAW,2BAAQxC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+B,EACUZ,EAAIkB,GACXvB,MAAK,SAAAwB,GACJd,EAASD,EAAMY,KAAI,SAAAtC,GAAI,OAAIA,EAAKsB,KAAOA,EAAKtB,EAAOyC,SAEpDC,OAAM,SAAAC,GACLX,EAAgB,SAAD,OAAUhC,EAAKK,QAAf,uCACfuC,YAAW,kBAAMZ,EAAgB,QAAO,KACxCL,EAASD,EAAMW,QAAO,SAAArC,GAAI,OAAIA,EAAKsB,KAAOA,SAyBduB,CAAmB7C,EAAKsB,MAF3CtB,EAAKsB,SAOhB,uBAAMwB,SA9DM,SAACC,GACfA,EAAMC,iBAEN,IAAMhD,EAAO,CACXK,QAASe,EACT6B,MAAM,IAAIC,MAAOC,cACjBhD,UAAWiD,KAAKC,SAAW,IAG7BnB,EACUlC,GACPiB,MAAK,SAAAwB,GACJd,EAASD,EAAM4B,OAAOb,IACtBb,EAAW,QAiDb,UACE,uBAAO2B,MAAOnC,EAASoC,SA7CJ,SAAAT,GAAK,OAAInB,EAAWmB,EAAMU,OAAOF,UA8CpD,wBAAQG,KAAK,SAAb,qBAGF,cAAC,EAAD,Q,MC/ENC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7c712b7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n\n  return (\n    <div className=\"error\">{message}</div>\n  );\n};\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Depart. of Computer Science, University of Helsinki 2020</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\n\nconst basUrl = '/api/notes';\n\nconst getAll = () =>\n  axios\n    .get(basUrl)\n    .then(response => response.data);\n\nconst create = newNote =>\n  axios\n    .post(basUrl, newNote)\n    .then(response => response.data);\n\nconst update = (id, newNote) =>\n  axios\n    .put(`${basUrl}/${id}`, newNote)\n    .then(response => response.data);\n\nexport default { getAll, create, update };","import React, { useEffect, useState } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => setNotes(initialNotes));\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n\n    const note = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService\n      .create(note)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n      }\n    );\n  };\n\n  const handleNoteChange = event => setNewNote(event.target.value);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id);\n    const updatedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, updatedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${note.content}' was already removed from server.`);\n        setTimeout(() => setErrorMessage(null), 5000);\n        setNotes(notes.filter(note => note.id !== id));\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button> \n      </div>\n\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type='submit'>save</button>\n      </form>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}