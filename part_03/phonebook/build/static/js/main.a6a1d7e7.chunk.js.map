{"version":3,"sources":["components/Filter.js","components/Form.js","components/DisplayPerson.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","filterValueChange","value","onChange","Form","formActionListeners","newName","newNumber","addName","nameValueChange","numberValueChange","onSubmit","type","DisplayPerson","name","number","deleteNumberHandler","onClick","Notification","notification","error","className","baseURL","axios","get","then","response","data","person","post","put","id","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personServices","event","target","preventDefault","trim","length","find","window","confirm","newPerson","newPersons","map","returnedPerson","concat","personsToShow","toLowerCase","includes","setTimeout","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6a1d7e7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ filter, filterValueChange }) => {\n  return (\n    <div>\n      filter with: <input value={filter} onChange={filterValueChange} />\n    </div>\n  );\n};\n\nexport default Filter;","import React from 'react';\n\nconst Form = ({ formActionListeners, newName, newNumber }) => {\n    const { addName, nameValueChange, numberValueChange } = formActionListeners;\n  \n    return (\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={nameValueChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={numberValueChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    );\n  };\n\n  export default Form;","import React from 'react';\n\nconst DisplayPerson = ({ name, number, deleteNumberHandler }) =>\n  <p>{name} {number} <button onClick={deleteNumberHandler}>delete</button></p>\n\nexport default DisplayPerson;","import React from 'react';\n\nconst Notification = ({ notification, error }) => {\n  if (notification === null) {\n    return null;\n  } else if (error) {\n    return <h1 className='message error'>{notification}</h1>\n  } else {\n    return <h1 className='message notification'>{notification}</h1>\n  }\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseURL = '/api/persons';\n\nconst all = () =>\n  axios\n    .get(baseURL)\n    .then(response => response.data);\n\nconst add = (person) =>\n  axios\n    .post(baseURL, person)\n    .then(response => response.data);\n\nconst update = (person) =>\n  axios\n    .put(`${baseURL}/${person.id}`, person)\n    .then(response => response.data);\n\nconst del = (id) =>\n  axios\n    .delete(`${baseURL}/${id}`);\n\nexport default { all, add, update, del };\n","import React, { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport DisplayPerson from './components/DisplayPerson';\nimport Notification from './components/Notification';\n\nimport personServices from './services/persons';\n\nimport './App.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState([null, false]);\n\n  useEffect(() => {\n    personServices\n      .all()\n      .then(persons => setPersons(persons));\n  }, []);\n\n  const formActionListeners = {\n    nameValueChange: event => setNewName(event.target.value),\n    numberValueChange: event => setNewNumber(event.target.value),\n    addName: event => {\n      event.preventDefault();\n\n      if (newName.trim().length === 0) return;\n\n      const person = persons.find(person => person.name === newName);\n\n      if (person) {\n        if (window.confirm(`${newName} is already in the phonebook! Update number?`)) {\n          const newPerson = { ...person, number: newNumber };\n          personServices\n            .update(newPerson)\n            .then(response => {\n              const newPersons = persons.map(person => person.id === response.id ? response : person);\n              setPersons(newPersons);\n              setNotification([`Phone number of ${person.name} successfully updated!`, false]);\n            });\n        }\n      } else {\n        const newPerson = { name: newName, number: newNumber };\n        personServices\n          .add(newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson));\n            setNotification([`New phone number for ${newPerson.name} successfully added!`, false]);\n          });\n      }\n\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const filterValueChange = event => setFilter(event.target.value.trim());\n\n  const deleteNumberHandler = (id) => {\n    return () => {\n      const person = persons.find(person => person.id === id);\n      if (!window.confirm(`Really delete ${person.name}?`)) return;\n\n      personServices\n        .del(id)\n        .then(() => {\n          const newPersons = persons.filter(person => person.id !== id);\n          setPersons(newPersons);\n          setNotification([`Phone number of ${person.name} deleted!`, true]);\n        }).catch(error => {\n          setNotification([`Information for this person does not exist on the server!`, true])\n        });\n    };\n  };\n\n  const personsToShow =\n    persons.filter(person =>\n      person.name.toLowerCase().includes(filter.toLowerCase()));\n\n  setTimeout(() => {setNotification([null, false])}, 10000);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification[0]} error={notification[1]} />\n\n      <Filter filter={filter} filterValueChange={filterValueChange} />\n\n      <h2>add a new</h2>\n\n      <Form formActionListeners={formActionListeners}\n        newName={newName}\n        newNumber={newNumber} />\n\n      <h2>Numbers</h2>\n\n      {personsToShow.map(person =>\n        <DisplayPerson\n          key={person.name}\n          name={person.name}\n          number={person.number}\n          deleteNumberHandler={deleteNumberHandler(person.id)} />)}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}